Index: src/main/java/org/example/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example;\r\n\r\nimport net.sourceforge.tess4j.ITesseract;\r\nimport net.sourceforge.tess4j.Tesseract;\r\nimport net.sourceforge.tess4j.TesseractException;\r\n\r\nimport javax.imageio.ImageIO;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.*;\r\nimport java.net.MalformedURLException;\r\nimport java.net.URL;\r\nimport java.util.*;\r\n\r\n\r\npublic class Main {\r\n    public static void main(String[] args) throws  IOException {\r\n\r\n        String links_path = \"src/main/resources/image_links.txt\";\r\n        List<String> images_link_ = parseImagesLinks(links_path);\r\n        List<String> images_link = new ArrayList<>(\r\n                new HashSet<>(images_link_));\r\n        List<Pair<String, String>> imgLinkOCRs = new LinkedList<>();\r\n        for(String imgLink : images_link){\r\n            imgLinkOCRs.add(new Pair<>(imgLink, doOCR(downloadImage(imgLink))));\r\n        }\r\n        createHTML(createHtmlBody(imgLinkOCRs), \"src/main/resources/Output\");\r\n\r\n    }\r\n\r\n    private static List<String> parseImagesLinks(String path) {\r\n        List<String> links = new LinkedList<>();\r\n        try(FileReader fr = new FileReader(path)) {\r\n            BufferedReader br = new BufferedReader(fr);  //creates a buffering character input stream\r\n            String line;\r\n            while ((line = br.readLine()) != null) {\r\n                links.add(line);\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return links;\r\n    }\r\n    private static Pair<String, String> getLinkNameAndFormat(String linkName){\r\n        var split = linkName.split(\"/\");\r\n        String name = split[split.length - 1];\r\n        return new Pair<>(name, name.split(\"\\\\.\")[1]);\r\n    }\r\n    private static File downloadImage(String link) throws IOException {\r\n        URL url = new URL(link);\r\n        BufferedImage img;\r\n        try {\r\n            img = ImageIO.read(url);\r\n            Pair<String, String> nameFormat = getLinkNameAndFormat(link);\r\n            File file = new File(\"src/main/resources/Images/\"+nameFormat.getFirst());\r\n            ImageIO.write(img, nameFormat.getSecond(), file);\r\n            return file;\r\n        } catch (Exception e) {\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n    private static String doOCR(File img) {\r\n        if(img == null)\r\n            return \"Error: failed to download the img\";\r\n\r\n        try{\r\n          ITesseract tesseract = new Tesseract();\r\n                  tesseract.setDatapath(\"src/main/resources/tessdata\");\r\n                  return tesseract.doOCR(img);\r\n        }\r\n        catch (TesseractException e){\r\n            return \"Error: \" + e.getMessage();\r\n        }\r\n\r\n    }\r\n\r\n    private static String createHtmlBody(List<Pair<String,String>> imgLinkOCRs){\r\n        StringBuilder body = new StringBuilder();\r\n        for(Pair<String, String> img : imgLinkOCRs){\r\n            body.append(\"<p>\\n\\t<img src=\\\"\")\r\n                .append(img.getFirst())\r\n                .append(\"\\\"><br>\\n\\t\")\r\n                .append(img.getSecond())\r\n                .append(\"\\n</p>\\n\");\r\n        }\r\n        return body.toString();\r\n    }\r\n\r\n    private static void createHTML(String htmlBody, String dirPath){\r\n        String html =\r\n                \"\"\"\r\n                <html>\r\n                <head>\r\n                    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=windows-1252\">\r\n                    <title>OCR</title>\r\n                </head>\r\n                \"\"\" + htmlBody + \"</html>\";\r\n\r\n        try(FileWriter fw = new FileWriter(dirPath + \"\\\\results.html\")) {\r\n            fw.write(html);\r\n\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/Main.java b/src/main/java/org/example/Main.java
--- a/src/main/java/org/example/Main.java	(revision bb715db1c2b844aa6d2e7a107fc44eca73550846)
+++ b/src/main/java/org/example/Main.java	(date 1668448069655)
@@ -7,7 +7,6 @@
 import javax.imageio.ImageIO;
 import java.awt.image.BufferedImage;
 import java.io.*;
-import java.net.MalformedURLException;
 import java.net.URL;
 import java.util.*;
 
